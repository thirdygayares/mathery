"""Initialize Models

Revision ID: 43b9bb903d6a
Revises: 
Create Date: 2025-07-31 23:08:33.083686

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '43b9bb903d6a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('config',
    sa.Column('config_id', sa.Integer(), nullable=False),
    sa.Column('config_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('config_value', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('config_id')
    )
    op.create_table('image',
    sa.Column('image_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('image_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_uuid', sa.Uuid(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_user_uuid'), 'user', ['user_uuid'], unique=True)
    op.create_table('module',
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('module_uuid', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['image_id'], ['image.image_id'], ),
    sa.PrimaryKeyConstraint('module_id')
    )
    op.create_index(op.f('ix_module_module_uuid'), 'module', ['module_uuid'], unique=True)
    op.create_table('userrole',
    sa.Column('user_role_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('SUPERADMIN', 'USER', name='roleenum'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_role_id')
    )
    op.create_table('topic',
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('topic_uuid', sa.Uuid(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['image_id'], ['image.image_id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['module.module_id'], ),
    sa.PrimaryKeyConstraint('topic_id')
    )
    op.create_index(op.f('ix_topic_topic_uuid'), 'topic', ['topic_uuid'], unique=True)
    op.create_table('exercise',
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('exercise_uuid', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('summary', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('results_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('items', sa.Integer(), nullable=True),
    sa.Column('total_score', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ONGOING', 'CHECKING', 'DONE', name='exercisestatus'), nullable=False),
    sa.Column('type', sa.Enum('IMAGE', 'MCQ', name='exercisetype'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.topic_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('exercise_id')
    )
    op.create_index(op.f('ix_exercise_exercise_uuid'), 'exercise', ['exercise_uuid'], unique=True)
    op.create_table('mathery',
    sa.Column('mathery_id', sa.Integer(), nullable=False),
    sa.Column('mathery_uuid', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('summary', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.topic_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('mathery_id')
    )
    op.create_index(op.f('ix_mathery_mathery_uuid'), 'mathery', ['mathery_uuid'], unique=True)
    op.create_table('exerciseimage',
    sa.Column('exercise_image_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('question', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('correct_answer', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('user_answer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('result_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.exercise_id'], ),
    sa.PrimaryKeyConstraint('exercise_image_id')
    )
    op.create_table('exercisemcq',
    sa.Column('exercise_mcq_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('question', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('options', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('correct_answer', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('user_answer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('result_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.exercise_id'], ),
    sa.PrimaryKeyConstraint('exercise_mcq_id')
    )
    op.create_table('matheryconvo',
    sa.Column('mathery_convo_id', sa.Integer(), nullable=False),
    sa.Column('mathery_id', sa.Integer(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('TEXT', 'IMAGE', 'MD', name='messagetype'), nullable=False),
    sa.Column('role', sa.Enum('USER', 'AI', name='roletype'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['mathery_id'], ['mathery.mathery_id'], ),
    sa.PrimaryKeyConstraint('mathery_convo_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('matheryconvo')
    op.drop_table('exercisemcq')
    op.drop_table('exerciseimage')
    op.drop_index(op.f('ix_mathery_mathery_uuid'), table_name='mathery')
    op.drop_table('mathery')
    op.drop_index(op.f('ix_exercise_exercise_uuid'), table_name='exercise')
    op.drop_table('exercise')
    op.drop_index(op.f('ix_topic_topic_uuid'), table_name='topic')
    op.drop_table('topic')
    op.drop_table('userrole')
    op.drop_index(op.f('ix_module_module_uuid'), table_name='module')
    op.drop_table('module')
    op.drop_index(op.f('ix_user_user_uuid'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('image')
    op.drop_table('config')
    # ### end Alembic commands ###
